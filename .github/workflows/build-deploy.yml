name: Build and Deploy Microservice

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/microservice-app:latest,${{ secrets.DOCKERHUB_USERNAME }}/microservice-app:${{ github.sha }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.27.0'
        
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region us-east-1 --name microservice-cluster
        
    - name: Update deployment file
      run: |
        # Create a copy of the original deployment file
        cp kubernetes/deployment.yaml kubernetes/deployment-updated.yaml
        
        # Replace the image with the dynamic DockerHub username
        sed -i "s|misba7/microservice-app:latest|${{ secrets.DOCKERHUB_USERNAME }}/microservice-app:latest|g" kubernetes/deployment-updated.yaml
        
    - name: Deploy to Kubernetes
      run: |
        # Apply Kubernetes manifests using the updated deployment
        kubectl apply -f kubernetes/deployment-updated.yaml
        kubectl apply -f kubernetes/service.yaml
        
    - name: Verify deployment
      run: |
        kubectl rollout status deployment/microservice-app
        
    - name: Get Service URL
      run: |
        echo "Service is available at: $(kubectl get service microservice-app -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')"
